<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Info"
      throwConfigExceptions="true"
      internalLogFile="${basedir}/internal-nlog-AspNetCore.txt">

	<!-- ログの出力レイアウトを変数 layoutDefine で定義 -->
	<variable name="layoutDefine"
			  value="${longdate} [${event-properties:item=EventId_Id:whenEmpty=0}][${level:padding=-5}] ${message} ${exception:format=tostring} (${callsite:includeNamespace=false:fileName=true:includeSourcePath=false})" />

	<!-- 書き込むターゲット -->
	<targets>
		<!-- Visual Studio の出力 (デバッグ) に書き込みます -->

		<!-- 基本的な詳細を含むすべてのログメッセージのファイルターゲット -->
		<target xsi:type="File"
        name="FileOutput"
        fileName="Log.log"
        archiveNumbering="Date"
        archiveEvery="Day"
        archiveFileName="/Archive/Log_{#}.log"
        archiveDateFormat="yyyy-MM-dd"
        maxArchiveFiles="7"
        layout="${layoutDefine}" />


		<!-- Docker / Visual Studio の起動検出を改善するためにライフタイムメッセージをホストするためのコンソールターゲット  -->
	</targets>

	<!-- ロガー名からターゲットにマップするルール -->
	<rules>
		<!-- Microsoft からのものを含むすべてのログ -->

		<!-- 起動の検出を高速化するために、ホスティングライフタイムメッセージをコンソールターゲットに出力します。Microsoft.Hosting.Lifetime はここより下の定義には出力しません -->

		<!-- 重要でない Microsoft ログをスキップして、自分のログのみをログに記録する。システムが出す Warning 以上のログ以外はここより下の定義には出力されません -->
		<logger name="Microsoft.*" maxlevel="Info" final="true" />
		<logger name="System.Net.Http.*" maxlevel="Info" final="true" />

		<!-- 上記で除外したもの以外をファイルに出力 -->
		<logger name="*" writeTo="FileOutput" />
	</rules>
</nlog>